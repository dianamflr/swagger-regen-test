# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from swagger_server.models.base_model_ import Model
from swagger_server import util


class LongleyRicePropModelParameters(Model):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    def __init__(self, service_threshold: float=None, surface_refractivity: float=None, ground_dielectric_const: float=None, ground_conductivity: float=None, climatic_zone: str=None, confidence_level: float=None, time_avail: float=None, rx_height: float=None, elev_data_sampling_res_km: float=None, elev_source: str=None):  # noqa: E501
        """LongleyRicePropModelParameters - a model defined in Swagger

        :param service_threshold: The service_threshold of this LongleyRicePropModelParameters.  # noqa: E501
        :type service_threshold: float
        :param surface_refractivity: The surface_refractivity of this LongleyRicePropModelParameters.  # noqa: E501
        :type surface_refractivity: float
        :param ground_dielectric_const: The ground_dielectric_const of this LongleyRicePropModelParameters.  # noqa: E501
        :type ground_dielectric_const: float
        :param ground_conductivity: The ground_conductivity of this LongleyRicePropModelParameters.  # noqa: E501
        :type ground_conductivity: float
        :param climatic_zone: The climatic_zone of this LongleyRicePropModelParameters.  # noqa: E501
        :type climatic_zone: str
        :param confidence_level: The confidence_level of this LongleyRicePropModelParameters.  # noqa: E501
        :type confidence_level: float
        :param time_avail: The time_avail of this LongleyRicePropModelParameters.  # noqa: E501
        :type time_avail: float
        :param rx_height: The rx_height of this LongleyRicePropModelParameters.  # noqa: E501
        :type rx_height: float
        :param elev_data_sampling_res_km: The elev_data_sampling_res_km of this LongleyRicePropModelParameters.  # noqa: E501
        :type elev_data_sampling_res_km: float
        :param elev_source: The elev_source of this LongleyRicePropModelParameters.  # noqa: E501
        :type elev_source: str
        """
        self.swagger_types = {
            'service_threshold': float,
            'surface_refractivity': float,
            'ground_dielectric_const': float,
            'ground_conductivity': float,
            'climatic_zone': str,
            'confidence_level': float,
            'time_avail': float,
            'rx_height': float,
            'elev_data_sampling_res_km': float,
            'elev_source': str
        }

        self.attribute_map = {
            'service_threshold': 'serviceThreshold',
            'surface_refractivity': 'surfaceRefractivity',
            'ground_dielectric_const': 'groundDielectricConst',
            'ground_conductivity': 'groundConductivity',
            'climatic_zone': 'climaticZone',
            'confidence_level': 'confidenceLevel',
            'time_avail': 'timeAvail',
            'rx_height': 'rxHeight',
            'elev_data_sampling_res_km': 'elevDataSamplingResKm',
            'elev_source': 'elevSource'
        }
        self._service_threshold = service_threshold
        self._surface_refractivity = surface_refractivity
        self._ground_dielectric_const = ground_dielectric_const
        self._ground_conductivity = ground_conductivity
        self._climatic_zone = climatic_zone
        self._confidence_level = confidence_level
        self._time_avail = time_avail
        self._rx_height = rx_height
        self._elev_data_sampling_res_km = elev_data_sampling_res_km
        self._elev_source = elev_source

    @classmethod
    def from_dict(cls, dikt) -> 'LongleyRicePropModelParameters':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The longleyRice_prop_model_parameters of this LongleyRicePropModelParameters.  # noqa: E501
        :rtype: LongleyRicePropModelParameters
        """
        return util.deserialize_model(dikt, cls)

    @property
    def service_threshold(self) -> float:
        """Gets the service_threshold of this LongleyRicePropModelParameters.


        :return: The service_threshold of this LongleyRicePropModelParameters.
        :rtype: float
        """
        return self._service_threshold

    @service_threshold.setter
    def service_threshold(self, service_threshold: float):
        """Sets the service_threshold of this LongleyRicePropModelParameters.


        :param service_threshold: The service_threshold of this LongleyRicePropModelParameters.
        :type service_threshold: float
        """

        self._service_threshold = service_threshold

    @property
    def surface_refractivity(self) -> float:
        """Gets the surface_refractivity of this LongleyRicePropModelParameters.


        :return: The surface_refractivity of this LongleyRicePropModelParameters.
        :rtype: float
        """
        return self._surface_refractivity

    @surface_refractivity.setter
    def surface_refractivity(self, surface_refractivity: float):
        """Sets the surface_refractivity of this LongleyRicePropModelParameters.


        :param surface_refractivity: The surface_refractivity of this LongleyRicePropModelParameters.
        :type surface_refractivity: float
        """

        self._surface_refractivity = surface_refractivity

    @property
    def ground_dielectric_const(self) -> float:
        """Gets the ground_dielectric_const of this LongleyRicePropModelParameters.


        :return: The ground_dielectric_const of this LongleyRicePropModelParameters.
        :rtype: float
        """
        return self._ground_dielectric_const

    @ground_dielectric_const.setter
    def ground_dielectric_const(self, ground_dielectric_const: float):
        """Sets the ground_dielectric_const of this LongleyRicePropModelParameters.


        :param ground_dielectric_const: The ground_dielectric_const of this LongleyRicePropModelParameters.
        :type ground_dielectric_const: float
        """

        self._ground_dielectric_const = ground_dielectric_const

    @property
    def ground_conductivity(self) -> float:
        """Gets the ground_conductivity of this LongleyRicePropModelParameters.


        :return: The ground_conductivity of this LongleyRicePropModelParameters.
        :rtype: float
        """
        return self._ground_conductivity

    @ground_conductivity.setter
    def ground_conductivity(self, ground_conductivity: float):
        """Sets the ground_conductivity of this LongleyRicePropModelParameters.


        :param ground_conductivity: The ground_conductivity of this LongleyRicePropModelParameters.
        :type ground_conductivity: float
        """

        self._ground_conductivity = ground_conductivity

    @property
    def climatic_zone(self) -> str:
        """Gets the climatic_zone of this LongleyRicePropModelParameters.


        :return: The climatic_zone of this LongleyRicePropModelParameters.
        :rtype: str
        """
        return self._climatic_zone

    @climatic_zone.setter
    def climatic_zone(self, climatic_zone: str):
        """Sets the climatic_zone of this LongleyRicePropModelParameters.


        :param climatic_zone: The climatic_zone of this LongleyRicePropModelParameters.
        :type climatic_zone: str
        """

        self._climatic_zone = climatic_zone

    @property
    def confidence_level(self) -> float:
        """Gets the confidence_level of this LongleyRicePropModelParameters.


        :return: The confidence_level of this LongleyRicePropModelParameters.
        :rtype: float
        """
        return self._confidence_level

    @confidence_level.setter
    def confidence_level(self, confidence_level: float):
        """Sets the confidence_level of this LongleyRicePropModelParameters.


        :param confidence_level: The confidence_level of this LongleyRicePropModelParameters.
        :type confidence_level: float
        """

        self._confidence_level = confidence_level

    @property
    def time_avail(self) -> float:
        """Gets the time_avail of this LongleyRicePropModelParameters.


        :return: The time_avail of this LongleyRicePropModelParameters.
        :rtype: float
        """
        return self._time_avail

    @time_avail.setter
    def time_avail(self, time_avail: float):
        """Sets the time_avail of this LongleyRicePropModelParameters.


        :param time_avail: The time_avail of this LongleyRicePropModelParameters.
        :type time_avail: float
        """

        self._time_avail = time_avail

    @property
    def rx_height(self) -> float:
        """Gets the rx_height of this LongleyRicePropModelParameters.


        :return: The rx_height of this LongleyRicePropModelParameters.
        :rtype: float
        """
        return self._rx_height

    @rx_height.setter
    def rx_height(self, rx_height: float):
        """Sets the rx_height of this LongleyRicePropModelParameters.


        :param rx_height: The rx_height of this LongleyRicePropModelParameters.
        :type rx_height: float
        """

        self._rx_height = rx_height

    @property
    def elev_data_sampling_res_km(self) -> float:
        """Gets the elev_data_sampling_res_km of this LongleyRicePropModelParameters.


        :return: The elev_data_sampling_res_km of this LongleyRicePropModelParameters.
        :rtype: float
        """
        return self._elev_data_sampling_res_km

    @elev_data_sampling_res_km.setter
    def elev_data_sampling_res_km(self, elev_data_sampling_res_km: float):
        """Sets the elev_data_sampling_res_km of this LongleyRicePropModelParameters.


        :param elev_data_sampling_res_km: The elev_data_sampling_res_km of this LongleyRicePropModelParameters.
        :type elev_data_sampling_res_km: float
        """

        self._elev_data_sampling_res_km = elev_data_sampling_res_km

    @property
    def elev_source(self) -> str:
        """Gets the elev_source of this LongleyRicePropModelParameters.


        :return: The elev_source of this LongleyRicePropModelParameters.
        :rtype: str
        """
        return self._elev_source

    @elev_source.setter
    def elev_source(self, elev_source: str):
        """Sets the elev_source of this LongleyRicePropModelParameters.


        :param elev_source: The elev_source of this LongleyRicePropModelParameters.
        :type elev_source: str
        """

        self._elev_source = elev_source
